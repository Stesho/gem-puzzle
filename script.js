!function(){"use strict";const t=t=>{const e=document.querySelectorAll(".canvas__cell");for(let l=0;l<e.length;l+=1)e[l].addEventListener("click",(()=>{t.moveCell(l)}))},e=(e,l)=>{const s=document.querySelector(".page");switch(e){case"puzzle":s.innerHTML='<div class="game"> <div class="panel"> <button class="panel__start">suffle and start</button> <button class="panel__start">save</button> <button class="panel__start">result</button> </div> <div class="canvas-wrapper"> <div class="canvas"> <div class="modal"> You are winner! </div> </div> </div> <div class="score"> <div class="score__moves"></div> <div class="score__timer"></div> </div> </div>',l.draw(),t(l);break;case"top":s.innerHTML="<div> There top score page </div>"}};document.querySelector("body").innerHTML='<div class="wrapper"> <div class="container"> <header class="header"> <h1 class="title">Gem puzzle</h1> </header> <main class="main"> <nav class="menu"> <ul class="menu__list"> <li class="menu__list-item"> <button>Game</button> </li> <li class="menu__list-item"> <button>Top scores</button> </li> <li class="menu__list-item"> <button>Settings</button> </li> </ul> </nav> <div class="page"></div> </main> </div> </div>',(()=>{const l=document.querySelectorAll(".menu__list-item button"),s=document.querySelector(".page"),n=["puzzle","top"],i=new class{constructor(t){this.cellCount=t,this.emptyIndex=[],this.cellArr=this.setCellArr(),this.movesCount=0,this.isRendered=!1}draw(){const t=Math.sqrt(this.cellCount),e=document.querySelector(".canvas"),l=getComputedStyle(e).padding.split("px")[0];let s=(e.clientWidth-(t+1)*l)/t;s+="px";for(let l=0;l<t;l+=1)for(let n=0;n<t;n+=1){const t=document.createElement("div");t.classList.add("canvas__cell"),t.style.width=s,t.style.height=s,t.textContent=this.cellArr[l][n],e.append(t)}this.shuffle(),this.render(),this.isRendered=!0}render(){const t=document.querySelectorAll(".canvas__cell");for(let e=0;e<this.cellCount;e+=1){const[l,s]=this.getRowCol(e);t[e].textContent=this.cellArr[l][s],t[e].classList="canvas__cell",null===this.cellArr[l][s]&&t[e].classList.add("canvas__emptyCell")}}shuffle(){const t=this.cellCount-1;for(let e=0;e<200;e+=1){const e=this.getRandom(0,t);this.moveCell(e)}}setCellArr(){const t=this.cellCount,e=Math.sqrt(this.cellCount),l=[],s=[];for(let e=0;e<t-1;e+=1)l[e]=e+1;l.push(null);for(let t=0;t<e;t+=1)s[t]=[];for(let e=0;e<t;e+=1){const[t,n]=this.getRowCol(e);s[t][n]=l[e],null===l[e]&&(this.emptyIndex=[t,n])}return s}moveCell(t){const e=document.querySelectorAll(".canvas__cell"),[l,s]=this.getRowCol(t),[n,i]=this.emptyIndex,c=n*Math.sqrt(this.cellCount)+i;this.isClickable(t)&&([this.cellArr[l][s],this.cellArr[n][i]]=[this.cellArr[n][i],this.cellArr[l][s]],this.emptyIndex=[l,s],this.render(),e[c].classList.add("animationPopUp"),this.isRendered&&(this.movesCount+=1,console.log(this.movesCount))),this.checkArr()&&this.isRendered?document.querySelector(".modal").classList.add("visible"):document.querySelector(".modal").classList.remove("visible")}checkArr(){for(let t=0;t<this.cellCount-1;t+=1){const[e,l]=this.getRowCol(t);if(this.cellArr[e][l]!==t+1)return!1}return!0}isClickable(t){const e=Math.sqrt(this.cellCount),[l,s]=this.getRowCol(t);return l<e-1&&null===this.cellArr[l+1][s]||l>0&&null===this.cellArr[l-1][s]||null===this.cellArr[l][s+1]||null===this.cellArr[l][s-1]}getRowCol(t){const e=Math.sqrt(this.cellCount);return[Math.trunc(t/e),t%e]}getRandom(t=0,e=this.cellCount-1){const l=t-.5+Math.random()*(e-t+1);return Math.round(l)}}(9);s.innerHTML=i;for(let t=0;t<l.length;t+=1)l[t].addEventListener("click",(()=>{e(n[t],i)}));e(n[0],i),t(i)})(),alert("Привет, если вас не затруднит, буду очень благодарен, если проверите позже")}();