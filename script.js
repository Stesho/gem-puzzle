!function(){"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),function(){var t;e.g.importScripts&&(t=e.g.location+"");var s=e.g.document;if(!t&&s&&(s.currentScript&&(t=s.currentScript.src),!t)){var l=s.getElementsByTagName("script");l.length&&(t=l[l.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t}();var t=e.p+"assets/audio/7fab8bfb4c88fe7b05513df6a8e24cd2.mp3";const s=e=>{const t=document.querySelector(".score__moves span"),s=document.querySelector(".score__timer span");e.setIsRendered(!1),e.restart(),t.textContent=e.movesCount,s.textContent="00:00"};var l=()=>{const e=localStorage.getItem("puzzleType")||"3";JSON.parse(e);const l=new class{constructor(e){this.cellCount=e,this.emptyIndex=[],this.cellArr=this.setCellArr(),this.movesCount=0,this.isRendered=!1,this.timer={},this.isSoundOn="false"!==localStorage.getItem("isSoundOn")}setIsRendered(e){this.isRendered=e}draw(){const e=Math.sqrt(this.cellCount),t=document.querySelector(".canvas"),s=getComputedStyle(t).padding.split("px")[0];let l=(t.clientWidth-(e+1)*s)/e;l+="px";for(let s=0;s<e;s+=1)for(let i=0;i<e;i+=1){const e=document.createElement("div");e.classList.add("canvas__cell"),e.style.width=l,e.style.height=l,e.textContent=this.cellArr[s][i],t.append(e)}this.shuffle(),this.render()}render(){const e=document.querySelectorAll(".canvas__cell");for(let t=0;t<this.cellCount;t+=1){const[s,l]=this.getRowCol(t);e[t].textContent=this.cellArr[s][l],e[t].classList="canvas__cell",null===this.cellArr[s][l]&&e[t].classList.add("canvas__emptyCell")}}shuffle(){const e=this.cellCount-1;for(let t=0;t<200;t+=1){const t=this.getRandom(0,e);this.moveCell(t)}this.isRendered=!0}setCellArr(){const e=this.cellCount,t=Math.sqrt(this.cellCount),s=[],l=[];for(let t=0;t<e-1;t+=1)s[t]=t+1;s.push(null);for(let e=0;e<t;e+=1)l[e]=[];for(let t=0;t<e;t+=1){const[e,i]=this.getRowCol(t);l[e][i]=s[t],null===s[t]&&(this.emptyIndex=[e,i])}return l}moveCell(e){const s=document.querySelectorAll(".canvas__cell"),[l,i]=this.getRowCol(e),[n,a]=this.emptyIndex,o=n*Math.sqrt(this.cellCount)+a,r=new Audio(t);if(this.isClickable(e)&&([this.cellArr[l][i],this.cellArr[n][a]]=[this.cellArr[n][a],this.cellArr[l][i]],this.emptyIndex=[l,i],this.render(),s[o].classList.add("animationPopUp"),this.isRendered&&(this.movesCount+=1),this.isRendered&&this.isSoundOn&&r.play()),this.checkArr()&&this.isRendered){const e=document.querySelector(".modal"),t=document.querySelector(".modal__caption"),s=(this.timer.time%60).toString().padStart(2,0),l=Math.trunc(this.timer.time/60).toString().padStart(2,0);e.classList.add("visibleFlex"),t.textContent=`Hooray! You solved the puzzle in ${l}:${s} and ${this.movesCount} moves!`}else document.querySelector(".modal").classList.remove("visibleFlex")}checkArr(){for(let e=0;e<this.cellCount-1;e+=1){const[t,s]=this.getRowCol(e);if(this.cellArr[t][s]!==e+1)return!1}return!0}isClickable(e){const t=Math.sqrt(this.cellCount),[s,l]=this.getRowCol(e);return s<t-1&&null===this.cellArr[s+1][l]||s>0&&null===this.cellArr[s-1][l]||null===this.cellArr[s][l+1]||null===this.cellArr[s][l-1]}getRowCol(e){const t=Math.sqrt(this.cellCount);return[Math.trunc(e/t),e%t]}getRandom(e=0,t=this.cellCount-1){const s=e-.5+Math.random()*(t-e+1);return Math.round(s)}restart(){this.shuffle(),this.movesCount=0,this.timer.time=0,clearInterval(this.timer.timerId)}startTimer(){const e=document.querySelector(".score__timer span");this.timer.time=0,this.timer.timerId=setInterval((()=>{this.timer.time+=1;const t=(this.timer.time%60).toString().padStart(2,0),s=Math.trunc(this.timer.time/60).toString().padStart(2,0);e.textContent=`${s}:${t}`}),1e3)}stopTimer(){clearInterval(this.timer.timerId)}}(e**2);l.draw(),(e=>{const t=document.querySelectorAll(".canvas__cell"),l=document.querySelector(".score__moves span"),i=document.querySelector(".modal__save"),n=document.querySelector(".panel__start");for(let s=0;s<t.length;s+=1)t[s].addEventListener("click",(()=>{e.moveCell(s),l.textContent=e.movesCount,1===e.movesCount&&e.startTimer(),e.checkArr()&&e.stopTimer()}));i.addEventListener("click",(()=>{let t=localStorage.getItem("top")||"[]";t=JSON.parse(t),t.push({moves:e.movesCount,time:e.timer.time}),localStorage.setItem("top",JSON.stringify(t)),s(e)})),n.addEventListener("click",(()=>{s(e)}))})(l)};const i=(e,t,s)=>{const l=document.querySelector(".top__table"),i=document.querySelector(".top__list"),n=document.createElement("div"),a=document.createElement("div"),o=document.createElement("div"),r=document.createElement("div"),c=Math.trunc(s/60).toString().padStart(2,0),d=(s%60).toString().padStart(2,0);n.classList.add("top__listItem"),a.classList.add("top__listPosition"),o.classList.add("top__listMoves"),r.classList.add("top__listTimer"),l.classList.add("visibleBlock"),o.textContent=t,r.textContent=`${c}:${d}`,a.textContent=e,n.append(a),n.append(r),n.append(o),i.append(n)};const n=e=>{localStorage.setItem("isSoundOn",e)},a=e=>{localStorage.setItem("puzzleType",e)},o=e=>{const t=document.querySelector(".page");switch(e){case"puzzle":t.innerHTML='<div class="game"> <h2 class="game__title pageTitle"> Game </h2> <div class="panel"> <button class="panel__start btn">Suffle puzzle</button> </div> <div class="score"> <div class="score__moves"> Moves: <span>0</span> </div> <div class="score__timer"> Time: <span>00:00</span> </div> </div> <div class="canvas-wrapper"> <div class="canvas"> <div class="modal"> <div class="modal__caption"> You are winner! </div> <button class="modal__save btn"> Save result </button> </div> </div> </div> </div>',l();break;case"top":t.innerHTML='<div class="top"> <h2 class="top__title pageTitle"> Top scores </h2> <div class="top__table"> <div class="top__header"> <div class="top__headerTitle">#</div> <div class="top__headerTitle">Time</div> <div class="top__headerTitle">Moves</div> </div> <div class="top__list"> </div> </div> <div class="top__emptyList"> There are no saved results. Please play at least one game </div> </div>',(()=>{let e=localStorage.getItem("top")||"[]";if(e=JSON.parse(e),e.sort(((e,t)=>e.time>t.time?1:-1)),0===e.length)document.querySelector(".top__emptyList").classList.add("visibleBlock");else for(let t=0;t<e.length;t+=1)i(t+1,e[t].moves,e[t].time)})();break;case"settings":t.innerHTML='<div class="settings"> <h2 class="settings__title pageTitle"> Settings </h2> <div class="settings__content"> <div class="settings__sound"> <div class="settings__caption">Sound: </div> <div class="settings__input"> <input type="radio" id="soundOn" name="sound" value="true" checked="checked"> <label for="soundOn" name="sound">on</label> </div> <div class="settings__input"> <input type="radio" id="soundOff" name="sound" value="false"> <label for="soundOff" name="sound">off</label> </div> </div> <div class="settings__type"> <div class="settings__caption">Puzzle type: </div> <div class="settings__input"> <input type="radio" id="3x3" name="type" value="3" checked="checked"> <label for="3x3">3x3</label> </div> <div class="settings__input"> <input type="radio" id="4x4" name="type" value="4"> <label for="4x4">4x4</label> </div> <div class="settings__input"> <input type="radio" id="5x5" name="type" value="5"> <label for="5x5">5x5</label> </div> <div class="settings__input"> <input type="radio" id="6x6" name="type" value="6"> <label for="6x6">6x6</label> </div> <div class="settings__input"> <input type="radio" id="7x7" name="type" value="7"> <label for="7x7">7x7</label> </div> <div class="settings__input"> <input type="radio" id="8x8" name="type" value="8"> <label for="8x8">8x8</label> </div> </div> </div> </div>',(()=>{const e=document.querySelectorAll(".settings__sound input"),t=document.querySelectorAll(".settings__type input"),s=localStorage.getItem("isSoundOn")||"true",l=localStorage.getItem("puzzleType")||"3";e.forEach((e=>{e.value===s&&(e.checked=!0),e.addEventListener("click",(()=>{const t="true"===e.value;n(t)}))})),t.forEach((e=>{e.value===l&&(e.checked=!0),e.addEventListener("click",(()=>{a(e.value)}))}))})()}};document.querySelector("body").innerHTML='<div class="wrapper"> <div class="container"> <header class="header"> <h1 class="header__title">Gem puzzle</h1> </header> <main class="main"> <nav class="menu"> <h2 class="menu__title"> Menu </h2> <ul class="menu__list"> <li class="menu__list-item"> <input type="radio" id="menu-game" name="menu" checked="checked"> <label for="menu-game">Game</label> </li> <li class="menu__list-item"> <input type="radio" id="menu-top" name="menu"> <label for="menu-top">Top score</label> </li> <li class="menu__list-item"> <input type="radio" id="menu-settings" name="menu"> <label for="menu-settings">Settings</label> </li> </ul> </nav> <div class="page"></div> </main> </div> </div>',(()=>{const e=document.querySelectorAll(".menu__list-item input"),t=["puzzle","top","settings"];for(let s=0;s<e.length;s+=1)e[s].addEventListener("click",(()=>{o(t[s])}));o(t[0])})(),localStorage.getItem("isSoundOn")||n(!0),localStorage.getItem("puzzleType")||a(3)}();